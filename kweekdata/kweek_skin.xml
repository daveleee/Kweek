<?xml version="1.0" encoding="UTF-8"?>
<krpano version="1.19">

    
  <!-- Spot Style - Default Point Spot Style -->
  <style name="IconDefaultPointSpotStyle"
         url="%FIRSTXML%/spots/arrow_user_defaultpoint0.png"
         visible="false"
         onhover="onhoverIconDefaultPointSpotStyle"
         onout="onoutIconDefaultPointSpotStyle"

         height="55"
         width="55"
         />

  <action name="onhoverIconDefaultPointSpotStyle">
    showtooltip('hotspot');
  </action>


  <action name="onoutIconDefaultPointSpotStyle">
    hideTooltip();



  </action>



      
  <!-- Picture Spot Style - special menu -->

  <style name="RectPicturespecialmenu"
         distorted="true"
         visible="false"
         scale="1.0" 
         onhover="onhoverRectPicturespecialmenu"
         onover="onoverRectPicturespecialmenu"
         onout="onoutRectPicturespecialmenu"
         />
  <action name="onhoverRectPicturespecialmenu">
    showTooltip('hotspot');
  </action>
  <action name="onoverRectPicturespecialmenu">
    pauseautorotation(forcehotspot);

  </action>
  <action name="onoutRectPicturespecialmenu">
    hideTooltip();
    resumeautorotation(forcehotspot);

  </action>



      
  <!-- Picture Spot Style - restaurant info -->

  <style name="RectPicturerestaurantinfo"
         distorted="true"
         visible="false"
         scale="1.0" 
         onhover="onhoverRectPicturerestaurantinfo"
         onover="onoverRectPicturerestaurantinfo"
         onout="onoutRectPicturerestaurantinfo"
         />
  <action name="onhoverRectPicturerestaurantinfo">
    showTooltip('hotspot');
  </action>
  <action name="onoverRectPicturerestaurantinfo">
    pauseautorotation(forcehotspot);

  </action>
  <action name="onoutRectPicturerestaurantinfo">
    hideTooltip();
    resumeautorotation(forcehotspot);

  </action>



      
  <!-- Picture Spot Style - vr mode -->

  <style name="RectPicturevrmode"
         distorted="true"
         visible="false"
         scale="1.0" 
         onhover="onhoverRectPicturevrmode"
         onover="onoverRectPicturevrmode"
         onout="onoutRectPicturevrmode"
         />
  <action name="onhoverRectPicturevrmode">
    showTooltip('hotspot');
  </action>
  <action name="onoverRectPicturevrmode">
    pauseautorotation(forcehotspot);

  </action>
  <action name="onoutRectPicturevrmode">
    hideTooltip();
    resumeautorotation(forcehotspot);

  </action>



      
  <!-- Picture Spot Style - pickachew website -->

  <style name="RectPicturepickachewwebsite"
         distorted="true"
         visible="false"
         scale="1.0" 
         onhover="onhoverRectPicturepickachewwebsite"
         onover="onoverRectPicturepickachewwebsite"
         onout="onoutRectPicturepickachewwebsite"
         />
  <action name="onhoverRectPicturepickachewwebsite">
    showTooltip('hotspot');
  </action>
  <action name="onoverRectPicturepickachewwebsite">
    pauseautorotation(forcehotspot);

  </action>
  <action name="onoutRectPicturepickachewwebsite">
    hideTooltip();
    resumeautorotation(forcehotspot);

  </action>



      
  <!-- Picture Spot Style - Billboard Video -->

  <style name="RectPictureBillboardVideo"
         distorted="true"
         visible="false"
         scale="1.0" 
         onhover="onhoverRectPictureBillboardVideo"
         onout="onoutRectPictureBillboardVideo"
         />
  <action name="onhoverRectPictureBillboardVideo">
    showTooltip('hotspot');
  </action>
  <action name="onoutRectPictureBillboardVideo">
    hideTooltip();
    
  </action>



  
  <!-- Spot Style - Billboard Video -->
  <style name="PolygonBillboardVideo"
           visible="false"
           bordercolor="0xffffff"
           fillcolor="0xffe2e3"
           borderwidth="0"
           borderalpha="0"
           fillalpha="0"
           capture="false"
           onhover="onhoverPolygonBillboardVideo"
           onover="onoverPolygonBillboardVideo"
           onout="onoutPolygonBillboardVideo"
           />
  <action name="onhoverPolygonBillboardVideo">
    showTooltip('hotspot');
  </action>

  <action name="onoverPolygonBillboardVideo">
    set(borderwidth, 0);pauseautorotation(forcehotspot);

  </action>

  <action name="onoutPolygonBillboardVideo">

    set(borderwidth, 0);
    hideTooltip();resumeautorotation(forcehotspot);

  </action>


  <include url="%FIRSTXML%/graphics/alpo.sidebar-v1.0.32/sidebar.xml" /> <sidebar name="settings"  groupCount="4"      groupName0="get:data[en_panogroup1342_title].content" groupMessage0="panogroup1342_title" totalPanos0="4" group0Contents="pano1337|pano1338|pano1339|pano1340|" isRealGroup_0="true"  SceneName_0_0="pano1337"  SceneName_0_1="pano1338"  SceneName_0_2="pano1339"  SceneName_0_3="pano1340"       groupName1="get:data[en_panogroup211_title].content" groupMessage1="panogroup211_title" totalPanos1="14" group1Contents="pano2984|pano2981|pano210|pano203|pano205|pano206|pano208|pano209|pano204|pano899|pano2983|pano2985|pano2982|pano4351|" isRealGroup_1="true"  SceneName_1_0="pano2984"  SceneName_1_1="pano2981"  SceneName_1_2="pano210"  SceneName_1_3="pano203"  SceneName_1_4="pano205"  SceneName_1_5="pano206"  SceneName_1_6="pano208"  SceneName_1_7="pano209"  SceneName_1_8="pano204"  SceneName_1_9="pano899"  SceneName_1_10="pano2983"  SceneName_1_11="pano2985"  SceneName_1_12="pano2982"  SceneName_1_13="pano4351"       groupName2="get:data[en_panogroup222_title].content" groupMessage2="panogroup222_title" totalPanos2="11" group2Contents="pano3006|pano3002|pano3003|pano3008|pano3214|pano221|pano4521|pano220|pano3004|pano3007|pano219|" isRealGroup_2="true"  SceneName_2_0="pano3006"  SceneName_2_1="pano3002"  SceneName_2_2="pano3003"  SceneName_2_3="pano3008"  SceneName_2_4="pano3214"  SceneName_2_5="pano221"  SceneName_2_6="pano4521"  SceneName_2_7="pano220"  SceneName_2_8="pano3004"  SceneName_2_9="pano3007"  SceneName_2_10="pano219"       groupName3="get:data[en_panogroup2932_title].content" groupMessage3="panogroup2932_title" totalPanos3="5" group3Contents="pano4519|pano2996|pano2993|pano2995|pano2994|" isRealGroup_3="true"  SceneName_3_0="pano4519"  SceneName_3_1="pano2996"  SceneName_3_2="pano2993"  SceneName_3_3="pano2995"  SceneName_3_4="pano2994"    sbColor="030303" sbColorAlpha="0.70" sbAlign="left" startOpened="true" sbCloseIfnew="true" sbIconPosition="top" sbIconAlpha="90" sbIconAlphaSep="false" sbIconAlphaSepVal="90" sbIconOverState="false" sbIconOpenedState="false" sbIconOpenedOverState="false" sbIconPositionX="-5" sbIconPositionY="0" sbIconPositionOpenUse="false" sbIconPositionOpen="top" sbIconPositionOpenX="0" sbIconPositionOpenY="0" sbIconHideShowDelay="false" sbIconDelay="6" sbMenuType="hierarchical"  sbIconUrl="%FIRSTXML%/graphics/alpo.sidebar-v1.0.32/hamburgerbutton.png"     textFieldUrl="%FIRSTXML%/graphics/textfield.swf"  scrollUrl="%FIRSTXML%/graphics/scrollarea.swf"   scrollAltUrl="%FIRSTXML%/graphics/scrollarea.js"  sbcurrent_PanoTxt="alpo_sidebar_fullsbcurrent_PanoTxt" sbcurrent_PanoTxtFont="trebuchet ms" sbcurrent_PanoTxtFontSize="14" sbcurrent_PanoTxtColor="b7b7b7" sbcurrent_PanoTxtAlpha="0.70" sbcurrent_PanoTxtAlign="center"  sbcurrent_PanoTxtFontItalic=""   sbcurrent_PanoTxtFontBold="font-weight:bold;"   sbcurrent_PanoTxtFontTD=""  sbcurrent_PanoNameTxtColor="eeeeee" sbcurrent_PanoNameTxtSize="18"  sbcurrent_PanoNameTxtDecorU1="" sbcurrent_PanoNameTxtDecorU2=""   sbcurrent_PanoNameTxtDecorB1="[b]" sbcurrent_PanoNameTxtDecorB2="[/b]"   sbcurrent_PanoNameTxtDecorI1="" sbcurrent_PanoNameTxtDecorI2=""  sbOpenCloseUseOpener="false" sbOpenCloseUseButton="true" sbContextMenuItem="true" sbZorder="98" /> <style name="sbBlocks" keep="true" type="container" bgcapture="false" bgalpha="0.0" width="100%" accuracy="1" />  <style name="sbOpenerST" keep="false"/>  <style name="sbIconST" visible="true" /> <events name="sbBlocksHEv" keep="true" onresize="sbBlocksHEvAct()" /> <action name="sbBlocksHEvAct">    calcBlock1H();    calcBlock2H();    calcBlock3H();     </action>  <style name="sbBlock1ST" parent="sb" align="top" minheight="0" maxheight="0" y="0"  bgcolor="0xffa02b" bgalpha="0.40"  /> <layer name="sbBlock1" style="sbBlocks|sbBlock1ST" /> <action name="calcBlock1H"> calc(layer[sbBlock1].height, 17 * stageheight * 0.01); if(layer[sbBlock1].height LT layer[sbBlock1].minheight AND layer[sbBlock1].minheight != 0, copy(layer[sbBlock1].height, layer[sbBlock1].minheight); ); if(layer[sbBlock1].height GT layer[sbBlock1].maxheight AND layer[sbBlock1].maxheight != 0, copy(layer[sbBlock1].height, layer[sbBlock1].maxheight); ); calc(layer[sbBlock1].realBlockY, 0 + 0); </action>   <style name="sbBlock2ST" parent="sbBlock1" align="bottom" edge="top" minheight="0" maxheight="0" y="-5"  /> <layer name="sbBlock2" style="sbBlocks|sbBlock2ST" /> <action name="calcBlock2H"> calc(layer[sbBlock2].height, 68 * stageheight * 0.01); if(layer[sbBlock2].height LT layer[sbBlock2].minheight AND layer[sbBlock2].minheight != 0, copy(layer[sbBlock2].height, layer[sbBlock2].minheight); ); if(layer[sbBlock2].height GT layer[sbBlock2].maxheight AND layer[sbBlock2].maxheight != 0, copy(layer[sbBlock2].height, layer[sbBlock2].maxheight); ); calc(layer[sbBlock2].realBlockY, layer[sbBlock1].realBlockY + layer[sbBlock1].height + 5); </action>   <style name="sbBlock3ST" parent="sbBlock2" align="bottom" edge="top" minheight="0" maxheight="0" y="-0"  /> <layer name="sbBlock3" style="sbBlocks|sbBlock3ST" /> <action name="calcBlock3H"> calc(layer[sbBlock3].height, 11 * stageheight * 0.01); if(layer[sbBlock3].height LT layer[sbBlock3].minheight AND layer[sbBlock3].minheight != 0, copy(layer[sbBlock3].height, layer[sbBlock3].minheight); ); if(layer[sbBlock3].height GT layer[sbBlock3].maxheight AND layer[sbBlock3].maxheight != 0, copy(layer[sbBlock3].height, layer[sbBlock3].maxheight); ); calc(layer[sbBlock3].realBlockY, layer[sbBlock2].realBlockY + layer[sbBlock2].height + 0); </action>                <style name="sbLogoST" keep="true" url="%FIRSTXML%/graphics/alpo.sidebar-v1.0.32/main_logo.png" align="top" alpha="0" width="100%" height="prop" handcursor="true" accuracy="1" onloaded="sbGetLogoPropValue(get(plugin[sb_logo].height),get(plugin[sb_logo].imageheight),get(plugin[sb_logo].imagewidth),get(plugin[sb_logo].width),sb_logo);" parent="sbBlock1" onclick="sbOnClickLogo()" />  <action name="sbOnClickLogo"> openurl(http://kweeknyc.com,_self);

  </action>                           <style name="current_PanoNameUseST" url="" keep="false" />                <include url="%FIRSTXML%/graphics/alpo.sidebar-v1.0.32/menutype/hierarchical.xml" /> <style name="scrolLayerST" keep="true" type="container" align="top" parent="sbBlock2" width="243" height="100%"/> <style name="scrollareaST" parent="scrolLayer" keep="true" align="lefttop" width="243" constW="243"/>                                       <style name="sbButtonsContST" parent="sbBlock3" keep="true" type="container" align="center" bgalpha="0.0" bgcapture="false" maskchildren="true" maxwidth="245" /> <style name="sbButtonsST" keep="true" type="container" bgcapture="true" accuracy="1" maskchildren="true" parent="sbButtonsCont" align="lefttop"/> <style name="sbButtonIconST" keep="true" x="0" y="0" accuracy="1" align="center" enabled="false" scale="0.5"/> <style name="sbButtonsCommonST" width="70" height="70" width.tablet="70" height.tablet="70" width.mobile="60" height.mobile="60" bgcolor="0x000000" bgalpha="0.00" bgroundedge="2" bgroundedge.tablet="0" bgroundedge.mobile="30"  onout="hideTooltip();"/>  <action name="sbButtonToggle"> if(sbButton%1FirstClicked == false OR sbButton%1FirstClicked === null, set(sbButton%1FirstClicked, true); copy(layer[sbButton%1icon].url, layer[sbButton%1icon].urlState2); sbButton%1ClickFirst(); , set(sbButton%1FirstClicked, false); copy(layer[sbButton%1icon].url, layer[sbButton%1icon].urlState1); sbButton%1ToggleClick(); ); </action>                    <layer name="sbButton1" style="sbButtonsST|sbButtonsCommonST" onclick="sbButton1ClickFirst()"  x="0" y="0"  x.tablet="0" y.tablet="0"   x.mobile="0" y.mobile="0"      />  <layer name="sbButton1icon" style="sbButtonIconST" url="%FIRSTXML%/graphics/alpo.sidebar-v1.0.32/vr_icon_circle.png" parent="sbButton1" urlState1="%FIRSTXML%/graphics/alpo.sidebar-v1.0.32/vr_icon_circle.png" urlState2="%FIRSTXML%/graphics/alpo.sidebar-v1.0.32/"     />   <action name="sbButton1ClickFirst">  js(accessWebVr());

  </action>                   <layer name="sbButton2" style="sbButtonsST|sbButtonsCommonST" onclick="sbButton2ClickFirst()"  x="75" y="0"  x.tablet="73" y.tablet="0"   x.mobile="64" y.mobile="0"      />  <layer name="sbButton2icon" style="sbButtonIconST" url="%FIRSTXML%/graphics/alpo.sidebar-v1.0.32/share_icon_circle.png" urlState1="%FIRSTXML%/graphics/alpo.sidebar-v1.0.32/share_icon_circle.png" urlState2="%FIRSTXML%/graphics/alpo.sidebar-v1.0.32/" parent="sbButton2"     />   <action name="sbButton2ClickFirst">  showSocialShare_socialShare();

  </action>                   <layer name="sbButton3" style="sbButtonsST|sbButtonsCommonST" onclick="sbButton3ClickFirst()"  x="150" y="0"  x.tablet="146" y.tablet="0"   x.mobile="128" y.mobile="0"      />  <layer name="sbButton3icon" style="sbButtonIconST" url="%FIRSTXML%/graphics/alpo.sidebar-v1.0.32/information6.png" parent="sbButton3" urlState1="%FIRSTXML%/graphics/alpo.sidebar-v1.0.32/information6.png" urlState2="%FIRSTXML%/graphics/alpo.sidebar-v1.0.32/"     />   <action name="sbButton3ClickFirst">  
displayImage(%FIRSTXML%/graphics/alpo.sidebar-v1.0.32/about_us_6.png
             ,center,0,0
             ,300
             ,320

             ,true
             ,false
             ,true
             ,true
             ,000000
             ,0.80000000000000004);
  </action>                               <layer name="sbButtonsCont" style="sbButtonsContST" width="1" height="1" onloaded="if(device.desktop,sbButtonsContgetW( 225 ,0 ,5 ,0 ,0 ,70  ); );  if(device.tablet,sbButtonsContgetW_TAB( 219 ,0 ,3 ,0 ,0 ,70  ); );   if(device.mobile,sbButtonsContgetW_MOB( 192 ,0 ,4 ,0 ,0 ,60  ); );  sbButtonsContSetOffset(); sbButtondContSetMinHeight(sbBlock3); " /> <action name="sbButtonsContgetW"> if(%1 GE %2, sub(layer[sbButtonsCont].width, %1, %3);  , sub(layer[sbButtonsCont].width, %2, %3);  ); if(%5 GT 0, add(layer[sbButtonsCont].height, %5, %6);  , add(layer[sbButtonsCont].height, %4, %6);  ); </action> <action name="sbButtonsContgetW_TAB"> if(%1 GE %2, sub(layer[sbButtonsCont].width, %1, %3);  , sub(layer[sbButtonsCont].width, %2, %3);  ); if(%5 GT 0, add(layer[sbButtonsCont].height, %5, %6);  , add(layer[sbButtonsCont].height, %4, %6);  ); </action> <action name="sbButtonsContgetW_MOB"> if(%1 GE %2, sub(layer[sbButtonsCont].width, %1, %3);  , sub(layer[sbButtonsCont].width, %2, %3);  ); if(%5 GT 0, add(layer[sbButtonsCont].height, %5, %6);  , add(layer[sbButtonsCont].height, %4, %6);  ); </action> <action name="sbButtonsContSetOffset"> if(layer[sbButtonsCont].align != top AND layer[sbButtonsCont].align != center AND layer[sbButtonsCont].align != bottom, set(layer[sbButtonsCont].x, 0); ); </action> <action name="sbButtondContSetMinHeight"> if(layer[%1].minheight LT layer[sbButtonsCont].height, copy(layer[%1].minheight, layer[sbButtonsCont].height); ); </action>  <sidebar name="settings" sbUseMainMenu="true" /> <sidebar name="settings" sbUseLogo="true"  /> <sidebar name="settings" sbUseLogo2="false"  /> <sidebar name="settings" current_PanoNameUse="false" /> <sidebar name="settings" useButtons="true" /><sidebar name="settings" sbHrMenuAreaNameWidth="203" sbHrMenuItemBgr="111111" sbHrMenuItemBgrAlpha="0.00" sbHrMenuItemLeftPadding="10" sbHrMenuItemRightPadding="10" sbHrMenuFont="arial" sbHrMenuFontSize="13" sbHrMenuFontColor="eeeeee" sbHrMenuFontAlign="center"  sbHrMenuFontItalic="font-style&#58;normal&#59;"   sbHrMenuFontBold="font-weight&#58;bold&#59;"   sbHrMenuFontTD="text-decoration&#58;none&#59;"  sbHrMenuAreaHeight="50" sbHrMenuAreaVSpace="0" sbHrMenuAreaXOffset="20"  overAnimColor="true" overColor="64a44a" overColorAlpha="0.40"  overAnimUse="true"  sbHrMenuItemBorder="true"  sbHrMenuItemBorderSet="0,0,1,0 0xeeeeee 0.60"  itemBorderContW="203" itemBorderWT="0" itemBorderWB="1" itemBorderContXoff="0" itemBorderContYoff="0" sbHrMenuSideIconUse="true" sbHrMenuSideIconTxtLevel="true" sbThumbsSetPos="top" sbThumbsSetH="85" sbThumbsSetTopPad="15" sbThumbsSetBotPad="15" sbThumbsSetMargin="5"    sbThumbsItemTotalH="133"  margEdge="15"       thumbPad="0"     sbInGroupHeaderArea="32" sbInGroupHeaderAreaH="32" sbInGroupHeaderAreaW="245" sbInGroupHeaderBMargin="0" sbInGroupHeaderAreaAlign="lefttop" sbInGroupHeaderBgr="true" sbInGroupHeaderBgrColor="0x0b0b0b" sbInGroupHeaderBgrAlpha="0.40" sbInGroupHeaderOverBeh="true" sbInGroupHeaderBgrOverColor="0x74ba52" sbInGroupHeaderBgrOverAlpha="0.50" sbInGroupHeaderUseTxt="true" sbInGroupHeaderFont="arial" sbInGroupHeaderFontSize="14" sbInGroupHeaderFontColor="eeeeee" sbInGroupHeaderTxtAlign="left" sbInGroupHeaderVcenter="true"  sbInGroupHeaderPaddingT="0" sbInGroupHeaderPaddingB="0"     sbInGroupHeaderIconUrl="%FIRSTXML%/graphics/alpo.sidebar-v1.0.32/graphics/arr_back_left.png" sbInGroupHeaderPaddingR="8" sbInGroupHeaderPaddingL="8"  sbInGroupHeaderFontI="font-style&#58;normal&#59;"   sbInGroupHeaderFontB="font-weight&#58;normal&#59;"   sbInGroupHeaderFontD="text-decoration&#58;none&#59;"   />    <style name="itemThumbST" align="top" />  <style name="sbHrMenuSideFileST" keep="true" enabled="false" edge="center" align="right" accuracy="1"  x="calc:10 + style[sbHrMenuSideFileST].width / 2" width="24" height="24" url="%FIRSTXML%/graphics/alpo.sidebar-v1.0.32/graphics/arr_item_right.png"  />  <style name="inGrHeadIconST" url="%FIRSTXML%/graphics/alpo.sidebar-v1.0.32/graphics/arr_back_left.png" onloaded="setHeaderPadding( get(sidebar[settings].sbInGroupHeaderPaddingL) , get(layer[inGrHeadIcon].width) )" />   
<!-- ********** -->
<!-- Social Share -->
<!-- id : socialShare -->
<!-- ********** -->

<ptplugin name="socialShare" engine="kolorBox">
	<settings>
		<option name="position" value="topleft" type="string" />
		<option name="margin_x" value="50" type="int" />
		<option name="margin_y" value="50" type="int" />
		<option name="external_padding" value="15" type="int" />
		<option name="animate" value="false" type="bool" />
		<option name="draggable_box" value="false" type="bool" />
		<option name="container_auto_size" value="true" type="bool" />
		<option name="container_color" value="ffffff" type="string" />
		<option name="container_alpha" value="0.80000000000000004" type="float" />
		<option name="container_topleft_border_radius" value="15" type="int" />
		<option name="container_topright_border_radius" value="15" type="int" />
		<option name="container_bottomleft_border_radius" value="15" type="int" />
		<option name="container_bottomright_border_radius" value="15" type="int" />
		<option name="container_border_width" value="0" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="1" type="float" />
		<option name="overlay_displayed" value="false" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.50000762951094835" type="float" />

		<option name="social_btn" value="facebook#twitter#google#linkedin#email" type="string" />
		<option name="social_orientation" value="horizontal" type="string" />
		<option name="social_btn_size" value="64" type="int" />
		<option name="inner_margin" value="10" type="int" />
		
		
		<option name="title_displayed" value="false" type="bool" />
		<option name="caption_displayed" value="false" type="bool" />
		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="topright" type="string" />
		<option name="close_text" value="socialShareclose_text" type="string" />

		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_socialShare')" type="string" />
		<option name="zorder" value="2" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>
		
	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_socialShare">
	set(ptplugin[socialShare].jsready, true);

</action>



<action name="showSocialShare_socialShare">
	ifnot(ptplugin[socialShare].isOpen,
		set(ptplugin[socialShare].isOpen, true);
		pauseautorotation(forceplugin);

			js(invokePluginFunction(socialShare, loadSingleArrayItem, social));
		events.dispatch(onremovedisplayedobject);
	);
</action>

<action name="toggleSocialShare_socialShare">
	js(invokePluginFunction(socialShare, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_socialShare">
	js(invokePluginFunction(socialShare, closeKolorBox));
</action>

<action name="closeKolorBoxCallback_socialShare">
	resumeautorotation(forceplugin);

	
	set(ptplugin[socialShare].isOpen, false);
</action>

<action name="changeLanguage_socialShare">
	if(ptplugin[socialShare].jsready,
		js(invokePluginFunction(socialShare, changeLanguage));
	);
</action>

<events name="kolorBoxEvents_socialShare" 
	keep="true"
	onsharetour="showSocialShare_socialShare();" 
	
	
	changetourlanguage="changeLanguage_socialShare();"
	/>

<!-- ********** -->
<!-- Colored Area1 -->
<!-- id : coloredarea -->
<!-- ********** -->

  <layer name="coloredarea"
         keep="true"
         type="container"
         align="topleft"
         x="0"
         y="0"
         zorder="3"
         height="100%"
         width="100%"
         
         visible="false"
         bgcolor="0x131313"
         bgalpha="0.40000000000000002"
         />

  <events name="coloredareaevents"
    onTourStart="showcoloredarea();"
    hidetourcontrols="hidecoloredarea();"
    showtourcontrols="showcoloredarea();"
    keep="true"/>

  <action name="hidecoloredarea">
    set(layer[coloredarea].visible, false);
  </action>
  <action name="showcoloredarea">
    set(layer[coloredarea].visible, true);
  </action>


<!-- ********** -->
<!-- Context menu -->
<!-- id : contextmenu -->
<!-- ********** -->
  <contextmenu fullscreen="false" versioninfo="false" touch="false">
    <item name="author" onclick="getmessage(urltoopen,project_author_url);openurl(get(urltoopen),_blank);" />
    <item name="fullscreenentry" onclick="enterFullscreen();
" separator="true"/>
  </contextmenu>

  <events name="contextmenuevents" keep="true" 
    onenterfullscreen="updateContextMenu" onexitfullscreen="updateContextMenu" 
    onxmlcomplete="updateContextMenu" 
    changetourlanguage="updateContextMenu" 
    />
  <events name="contextmenuvrevents" keep="true" 
    onvravailable="updateContextMenu();" onvrunavailable="updateContextMenu();"
    devices="html5"
    />
  <action name="updateContextMenu">
    getmessage(contextmenu.item[author].caption, project_author_name);
    if (device.fullscreensupport,
      if(tour_fullscreen,
        getmessage(contextmenu.item[fullscreenentry].caption, contextmenucloseFsLabel);
        set(contextmenu.item[fullscreenentry].onclick, exitFullscreen();
);
       ,
        getmessage(contextmenu.item[fullscreenentry].caption, contextmenuopenFsLabel);
        set(contextmenu.item[fullscreenentry].onclick, enterFullscreen();
);
      );
     ,
      set(contextmenu.item[fullscreenentry].visible, false);
    );
  </action>

<!-- ********** -->
<!-- Picture -->
<!-- id : picture -->
<!-- ********** -->

  <layer name="picture"
         keep="true"
         url="%FIRSTXML%/graphics/picture/about_us_6.png" 
         align="center"
         x="0"
         y="0"
         zorder="5"

         handcursor="true"
         onclick="hidepicture();"
         visible="false"
         height="320"
         width="300"
         />

  <events name="pictureevents" 
    onTourStart="showpicture(false);"
    hidetourcontrols="hidepicture();" 
    showtourcontrols="showpicture(false);" 
    keep="true" />

  <action name="hidepicture">set(layer[picture].visible, false);</action>
  <action name="showpicture">if(%1 == true,set(layer[picture].visible, true);,if(tour_displaycontrols,set(layer[picture].visible, true);,hidepicture();););</action>

<!-- ********** -->
<!-- $5 event -->
<!-- id : button -->
<!-- ********** -->

  <layer name="button"
         keep="true"
         url="%FIRSTXML%/graphics/button/icon.png" 
         align="bottomright"
         x="0"
         y="65"
         zorder="6"
         visible="false"
         onclick="buttonOnClick"
         alpha="0.7"
         onout="tween(alpha,0.7,0.5,easeOutQuad);"
         onover="tween(alpha,1.0,0.5,easeOutQuad);"
         height="100"
         width="130"
         />
  <action name="buttonOnClick">openurl(http://kweeknyc.com/signup/php/index.php,_blank);


  </action>

  <events name="buttonevents" 
    onTourStart="showbutton();"
    hidetourcontrols="hidebutton();" 
    showtourcontrols="showbutton();" 
    keep="true" />
  <action name="hidebutton">set(layer[button].visible, false);</action>
  <action name="showbutton">if(tour_displaycontrols,set(layer[button].visible, true);,hidebutton(););</action>


<!-- ********** -->
<!-- Facebook -->
<!-- id : button1 -->
<!-- ********** -->

  <layer name="button1"
         keep="true"
         url="%FIRSTXML%/graphics/button1/facebook.png" 
         align="bottomright"
         x="60"
         y="3"
         zorder="7"
         visible="false"
         onclick="button1OnClick"
         alpha="0.7"
         onout="tween(alpha,0.7,0.5,easeOutQuad);"
         onover="tween(alpha,1.0,0.5,easeOutQuad);"
         height="60"
         width="60"
         />
  <action name="button1OnClick">openurl(https://www.facebook.com/Korean-Restaurant-Week-New-York-City-743723472434013/?fref=ts,_blank);


  </action>

  <events name="button1events" 
    onTourStart="showbutton1();"
    hidetourcontrols="hidebutton1();" 
    showtourcontrols="showbutton1();" 
    keep="true" />
  <action name="hidebutton1">set(layer[button1].visible, false);</action>
  <action name="showbutton1">if(tour_displaycontrols,set(layer[button1].visible, true);,hidebutton1(););</action>


<!-- ********** -->
<!-- Instagram -->
<!-- id : button2 -->
<!-- ********** -->

  <layer name="button2"
         keep="true"
         url="%FIRSTXML%/graphics/button2/instagram.png" 
         align="bottomright"
         x="0"
         y="3"
         zorder="8"
         visible="false"
         onclick="button2OnClick"
         alpha="0.7"
         onout="tween(alpha,0.7,0.5,easeOutQuad);"
         onover="tween(alpha,1.0,0.5,easeOutQuad);"
         height="60"
         width="60"
         />
  <action name="button2OnClick">openurl(https://www.instagram.com/peekachews/,_blank);


  </action>

  <events name="button2events" 
    onTourStart="showbutton2();"
    hidetourcontrols="hidebutton2();" 
    showtourcontrols="showbutton2();" 
    keep="true" />
  <action name="hidebutton2">set(layer[button2].visible, false);</action>
  <action name="showbutton2">if(tour_displaycontrols,set(layer[button2].visible, true);,hidebutton2(););</action>


  <action name="displayWebVideo">
    if(layer[webvideodisplay_bg],

    ,
      <!-- add overlay -->
      addlayer(webvideodisplay_bg);
      set(layer[webvideodisplay_bg].type, container);
      set(layer[webvideodisplay_bg].zorder, 98);
      set(layer[webvideodisplay_bg].align, topleft);
      set(layer[webvideodisplay_bg].width, 100%);
      set(layer[webvideodisplay_bg].height, 100%);
      set(layer[webvideodisplay_bg].bgcolor, %16);
      set(layer[webvideodisplay_bg].bgalpha, %17);
      set(layer[webvideodisplay_bg].bgcapture, true);
      set(layer[webvideodisplay_bg].handcursor, false);
      set(layer[webvideodisplay_bg].alpha, 0.0);
      set(layer[webvideodisplay_bg].onclick, displayWebVideoObjectClose() );
      tween(layer[webvideodisplay_bg].alpha, 1.0, 0.5, default,
        

        addlayer(webvideodisplay_player);
        set(layer[webvideodisplay_player].parent, layer[webvideodisplay_bg]);
        set(layer[webvideodisplay_player].align, %13);
        set(layer[webvideodisplay_player].x, %14);
        set(layer[webvideodisplay_player].y, %15);
        set(layer[webvideodisplay_player].alpha, 0.0);
        set(layer[webvideodisplay_player].pauseautorotate, %18);
        set(layer[webvideodisplay_player].pausebgsound, %19);
        
        sub(maxstagewidth, get(stagewidth), %14);
        sub(maxstageheight, get(stageheight), %15);

        if('4:3' == '%3',
          div(aspect, 4, 3);
        ,
          if('2.39:1' == '%3',
            div(aspect, 2.39, 1);
          ,
            div(aspect, 16, 9);
          );
        );
        if(%9,
          if(%10 == 'pixel',
            set(new_videowidth, %9);
            div(new_videoheight, get(new_videowidth), get(aspect));
          ,
            mul(new_videowidth, get(maxstagewidth), %9);
            div(new_videowidth, 100);
            div(new_videoheight, get(new_videowidth), get(aspect));
          );
        ,
          ifnot(%11,
            set(max_videoheight, %2);
            set(new_videowidth, %1);
            set(new_videoheight, %2);
          );
        );
        if(%11,
          ifnot(%9,
            if(%12 == 'pixel',
              set(new_videoheight, %11);
              mul(new_videowidth, get(new_videoheight), get(aspect));
            ,
              mul(new_videoheight, get(maxstageheight), %11);
              div(new_videoheight, 100);
              mul(new_videowidth, get(new_videoheight), get(aspect));
            );
            set(max_videoheight, get(new_videoheight));
          ,
            if(%12 == 'pixel',
              set(max_videoheight, %11);
            ,
              mul(max_videoheight, get(maxstageheight), %11);
              div(max_videoheight, 100);
            );
          );
        ,
          set(max_videoheight, get(new_videoheight));
        );
        if(new_videowidth GT maxstagewidth,
          set(new_videowidth, get(maxstagewidth));
          div(new_videoheight, get(new_videowidth), get(aspect));
        );
        if(max_videoheight GT maxstageheight,
          set(max_videoheight, get(maxstageheight));
        );
        if(new_videoheight GT max_videoheight,
          set(new_videoheight, get(max_videoheight));
          mul(new_videowidth, get(new_videoheight), get(aspect));
        );
        roundval(new_videowidth);
        roundval(new_videoheight);
        set(layer[webvideodisplay_player].width, get(new_videowidth));
        set(layer[webvideodisplay_player].height, get(new_videoheight));
        
        set(tour_current_played_web_video, %8);
        
        if(device.html5,

          txtadd(iframecode, '[iframe width="',get(layer[webvideodisplay_player].width),'" height="',get(layer[webvideodisplay_player].height),'" src="','%4','%8','?','%6','" frameborder="0" allowfullscreen][/iframe]');
          set(layer[webvideodisplay_player].html, get(iframecode));
          set(layer[webvideodisplay_player].padding, 0);
          set(layer[webvideodisplay_player].url, '%FIRSTXML%/graphics/textfield.swf');
          set(layer[webvideodisplay_player].onloaded, displayWebVideoObjectReady() );
        ,

          txtadd(embedurl, '%5','%8','%7');
          set(layer[webvideodisplay_player].onloaded, registercontentsize(%1,%2);displayWebVideoObjectReady(); );
          set(layer[webvideodisplay_player].url, get(embedurl));
        );
      );
    );
  </action>
  <action name="displayWebVideoObjectReady">
    if(layer[webvideodisplay_player],
      set(layer[webvideodisplay_player].currentCall, true);
      events.dispatch(onremovedisplayedobject);
      tween(layer[webvideodisplay_player].alpha, 1.0, default, default,
        if(layer[webvideodisplay_player].pauseautorotate,pauseautorotation(forcehotspot);
);
        if(layer[webvideodisplay_player].pausebgsound,pauseTourSoundsActions(true,true,false,true,true););
      );
    );
  </action>
  <action name="displayWebVideoObjectClose">
    if(layer[webvideodisplay_player],
      if(layer[webvideodisplay_player].currentCall,
        set(layer[webvideodisplay_player].currentCall, false);
      ,
        set(layer[webvideodisplay_bg].onclick, null);
        delete(tour_current_played_web_video);
        tween(layer[webvideodisplay_player].alpha, 0.0, 0.25, default);
        tween(layer[webvideodisplay_bg].alpha,0.0, 0.50, default,
          if(layer[webvideodisplay_player].pauseautorotate,resumeautorotation(forcehotspot);
);
          if(layer[webvideodisplay_player].pausebgsound,resumeTourSoundsActions(true,true,true,true,true););
          removelayer(webvideodisplay_bg);
          removelayer(webvideodisplay_player);
        );
      );
    );
  </action>
  <events name="displayWebVideoObjectEvents" keep="true" onremovedisplayedobject="displayWebVideoObjectClose();"/>

  <!-- Fullscreen Management -->
  <action name="exitFullScreen" devices="fullscreensupport">set(tour_fullscreen,false);js(setFullscreen(false));</action>
  <action name="enterFullScreen" devices="fullscreensupport">set(tour_fullscreen,true);js(setFullscreen(true));</action>
  <action name="switchFullScreen">if(tour_fullscreen,exitFullScreen();,enterFullScreen(););</action>

  
  <events name="krpanoExitFullscreenEvent"
    onexitfullscreen="if(tour_fullscreen,exitFullScreenChangeEvent(););"
    keep="true" />

  <action name="exitFullScreenChangeEvent" devices="fullscreensupport">set(tour_fullscreen,false);events.dispatch(onexitfullscreen);</action>
  <action name="enterFullScreenChangeEvent" devices="fullscreensupport">set(tour_fullscreen,true);events.dispatch(onenterfullscreen);</action>
  <action name="exitFullScreenFallback">set(fullscreen,false);</action>
  <action name="enterFullScreenFallback">set(fullscreen,true);</action>
  
  <action name="resizeFullScreenEvent">delayedcall(0,updatescreen(););</action>

  <action name="displayImage">
    if (layer[displayedStandardImage],
      if(layer[displayedStandardImage].doNotDeleteMe,
        set(layer[displayedStandardImage].currentCall, false);
        set(layer[displayedStandardImage].doNotDeleteMe, false);
        
        if (%1 == layer[displayedStandardImage].url,
          applyDisplayedImageObjectAnimation(%8);
        ,
          setDisplayedImageObjectParameters(%1, %2, %3, %4, %5, %6, %7, %8, %9, %10);
        );
      ,
        set(layer[displayedStandardImage].currentCall, false);
        set(layer[displayedStandardImage].doNotDeleteMe, true);
        events.dispatch(onremovedisplayedobject);
        delayedcall(0.2,displayImage(%1, %2, %3, %4, %5, %6, %7, %8, %9, %10, %11, %12););
      );
    ,
      if(%10,
        addlayer(displayedStandardImageOverlay);
        set(layer[displayedStandardImageOverlay].keep, false);
        set(layer[displayedStandardImageOverlay].width, 100%);
        set(layer[displayedStandardImageOverlay].height, 100%);
        set(layer[displayedStandardImageOverlay].type, container);
        set(layer[displayedStandardImageOverlay].zorder, 98);
        set(layer[displayedStandardImageOverlay].visible, false);
        set(layer[displayedStandardImageOverlay].onclick, applyDisplayedImageObjectAnimation(%8););
        set(layer[displayedStandardImageOverlay].bgcolor, "0x%11");
        set(layer[displayedStandardImageOverlay].bgalpha, %12);
        set(layer[displayedStandardImageOverlay].bgcapture, true);
      );
      addlayer(displayedStandardImage);
      set(layer[displayedStandardImage].keep, false);
      set(layer[displayedStandardImage].onclick, applyDisplayedImageObjectAnimation(%8););
      set(layer[displayedStandardImage].zorder , 99);
      set(layer[displayedStandardImage].currentCall, true);
      set(layer[displayedStandardImage].doNotDeleteMe, true);
      set(layer[displayedStandardImage].onloaded, resizeDisplayedImageObject());
      events.dispatch(onremovedisplayedobject);
      delayedcall(0.2,displayImage(%1, %2, %3, %4, %5, %6, %7, %8, %9, %10, %11, %12););
      set(layer[displayedStandardImage].visible, false);
    );
  </action>
  <action name="applyDisplayedImageObjectAnimation">resumeautorotation(forcehotspot);

    if (%1,
      stoptween(layer[displayedStandardImage].width, layer[displayedStandardImage].height);
      tween(layer[displayedStandardImage].width|layer[displayedStandardImage].height, 1|1, 1, easeOutQuad, WAIT);
      if(layer[displayedStandardImage].overlay,removelayer(displayedStandardImageOverlay););removelayer(displayedStandardImage);
    ,
      if(layer[displayedStandardImage].overlay,removelayer(displayedStandardImageOverlay););removelayer(displayedStandardImage);
    );
  </action>
  <action name="setDisplayedImageObjectParameters">
    set(layer[displayedStandardImage].url       , %1);
    set(layer[displayedStandardImage].align     , %2);
    set(layer[displayedStandardImage].x         , %3);
    set(layer[displayedStandardImage].y         , %4);
    set(layer[displayedStandardImage].imgwidth  , %5);
    set(layer[displayedStandardImage].imgheight , %6);
    set(layer[displayedStandardImage].animated  , %8);
    set(layer[displayedStandardImage].applyratio, %9);
    set(layer[displayedStandardImage].overlay   , %10);
    if (%7,pauseautorotation(forcehotspot);
);
  </action>
  <action name="resizeDisplayedImageObject">
    if(layer[displayedStandardImage].url,
    set(layer[displayedStandardImage].fullwidth, get(layer[displayedStandardImage].width));
    set(layer[displayedStandardImage].fullheight, get(layer[displayedStandardImage].height));
    if(layer[displayedStandardImage].animated,
      set(layer[displayedStandardImage].width , 1);
      set(layer[displayedStandardImage].height, 1);
    );
    if(layer[displayedStandardImage].imgwidth != "" AND layer[displayedStandardImage].imgheight != "",
      if(layer[displayedStandardImage].imgwidth == "prop",
        set(tempDisplayedImageObjectHeight, get(layer[displayedStandardImage].imgheight));
        indexoftxt(tempDisplayedImageObjectHeightPercent, get(tempDisplayedImageObjectHeight), "%");
        if(tempDisplayedImageObjectHeightPercent GT 0,
          txtreplace(tempDisplayedImageObjectHeight, '%', '');
          mul(tempDisplayedImageObjectHeight, get(stageheight));
          div(tempDisplayedImageObjectHeight, 100);
          Math.round(tempDisplayedImageObjectHeight);
        );
        mul(flyingImgWidth,get(layer[displayedStandardImage].fullwidth),get(tempDisplayedImageObjectHeight));
        div(flyingImgWidth,get(layer[displayedStandardImage].fullheight));
        Math.round(flyingImgWidth);
        set(layer[displayedStandardImage].imgwidth , get(flyingImgWidth));
        set(layer[displayedStandardImage].imgheight, get(tempDisplayedImageObjectHeight));
      ,
        if(layer[displayedStandardImage].imgheight == "prop",
          set(tempDisplayedImageObjectWidth, get(layer[displayedStandardImage].imgwidth));
          indexoftxt(tempDisplayedImageObjectWidthPercent, get(tempDisplayedImageObjectWidth), "%");
          if(tempDisplayedImageObjectWidthPercent GT 0,
            txtreplace(tempDisplayedImageObjectWidth, '%', '');
            mul(tempDisplayedImageObjectWidth, get(stagewidth));
            div(tempDisplayedImageObjectWidth, 100);
            Math.round(tempDisplayedImageObjectWidth);
          );
          mul(flyingImgHeight,get(layer[displayedStandardImage].fullheight),get(tempDisplayedImageObjectWidth));
          div(flyingImgHeight,get(layer[displayedStandardImage].fullwidth));
          Math.round(flyingImgHeight);
          set(layer[displayedStandardImage].imgwidth , get(tempDisplayedImageObjectWidth));
          set(layer[displayedStandardImage].imgheight , get(flyingImgHeight));
        ,
          set(tempDisplayedImageObjectWidth, get(layer[displayedStandardImage].imgwidth));
          set(tempDisplayedImageObjectHeight, get(layer[displayedStandardImage].imgheight));
          indexoftxt(tempDisplayedImageObjectWidthPercent, get(tempDisplayedImageObjectWidth), "%");
          indexoftxt(tempDisplayedImageObjectHeightPercent, get(tempDisplayedImageObjectHeight), "%");
          if(tempDisplayedImageObjectWidthPercent GT 0,
            txtreplace(tempDisplayedImageObjectWidth, '%', '');
            mul(tempDisplayedImageObjectWidth, get(stagewidth));
            div(tempDisplayedImageObjectWidth, 100);
            Math.round(tempDisplayedImageObjectWidth);
          );
          if(tempDisplayedImageObjectHeightPercent GT 0,
            txtreplace(tempDisplayedImageObjectHeight, '%', '');
            mul(tempDisplayedImageObjectHeight, get(stageheight));
            div(tempDisplayedImageObjectHeight, 100);
            Math.round(tempDisplayedImageObjectHeight);
          );
          set(layer[displayedStandardImage].imgwidth , get(tempDisplayedImageObjectWidth));
          set(layer[displayedStandardImage].imgheight, get(tempDisplayedImageObjectHeight));
        );
      );
    ,
      set(layer[displayedStandardImage].imgwidth , get(layer[displayedStandardImage].fullwidth));
      set(layer[displayedStandardImage].imgheight, get(layer[displayedStandardImage].fullheight));
    );
    
    set(resizedwidth, get(layer[displayedStandardImage].imgwidth));
    set(resizedheight, get(layer[displayedStandardImage].imgheight));
    if(layer[displayedStandardImage].applyratio,
      sub(resizedstagewidth, get(stagewidth), get(layer[displayedStandardImage].x));
      sub(resizedstageheight, get(stageheight), get(layer[displayedStandardImage].y));
      Math.abs(resizedstagewidth);
      Math.abs(resizedstageheight);
      if(resizedwidth GT resizedstagewidth,
        mul(tempresizedheight, get(resizedheight), get(resizedstagewidth));
        div(tempresizedheight, get(resizedwidth));
        Math.round(tempresizedheight);
        set(resizedwidth, get(resizedstagewidth));
        set(resizedheight, get(tempresizedheight));
      );
      if(resizedheight GT resizedstageheight,
        mul(tempresizedwidth, get(resizedwidth), get(resizedstageheight));
        div(tempresizedwidth, get(resizedheight));
        Math.round(tempresizedwidth);
        set(resizedheight, get(resizedstageheight));
        set(resizedwidth, get(tempresizedwidth));
      );
    );
    
    if(layer[displayedStandardImage].animated,
      set(layer[displayedStandardImage].animated, false);
      tween(layer[displayedStandardImage].width , get(resizedwidth), 1, easeOutQuad);
      tween(layer[displayedStandardImage].height, get(resizedheight), 1, easeOutQuad);
    ,
      set(layer[displayedStandardImage].width , get(resizedwidth));
      set(layer[displayedStandardImage].height, get(resizedheight));
    );
    if(layer[displayedStandardImage].overlay,set(layer[displayedStandardImageOverlay].visible, true););
    set(layer[displayedStandardImage].visible, true);
    ,
      delayedcall(0.2,resizeDisplayedImageObject(););
    );
  </action>
  <events name="displayedImageObjectEvents" keep="true" onremovedisplayedobject="displayedImageObjectOnRemoveDisplayedObject" onresize="if(layer[displayedStandardImage],resizeDisplayedImageObject());" />
  <action name="displayedImageObjectOnRemoveDisplayedObject">
    ifnot(layer[displayedStandardImage].currentCall,if(layer[displayedStandardImage].visible,resumeautorotation(forcehotspot);

      if(layer[displayedStandardImage].overlay,removelayer(displayedStandardImageOverlay););
      removelayer(displayedStandardImage);
    ););
  </action>


	<!-- WebVR plugin for VR availability tests -->

	<plugin name="ptpvrmode" devices="html5" keep="true"
		url="%FIRSTXML%/graphics/webvr.js"
		mobilevr_support="true"
		mobilevr_fake_support="true"
		vr_cursor=""
		vr_cursor_enabled="false"
		onavailable="delayedcall(1, checkVrAvailability(););"
		onunavailable="checkVrUnavailable();"
		/>
	<action name="checkVrAvailability">
		if(plugin[ptpvrmode],
			if (plugin[ptpvrmode].isavailable,
				set(tour_vrdevices, true);
				events.dispatch(onvravailable);
			,
				set(tour_vrdevices, false);
			);
		,
			checkVrUnavailable();
		);
	</action>
	<action name="checkVrUnavailable">
		set(tour_vrdevices, false);
		events.dispatch(onvrunavailable);
	</action>
  <!-- Sounds Management -->
  <plugin name="soundinterface"
          preload="true"
          url="%SWFPATH%/graphics/soundinterface.swf"
          alturl="%FIRSTXML%/graphics/soundinterface.js"
          rootpath="%$videos_sounds_path%/sounds"
          backgroundsound=""
          backgroundsoundloops="0"
          bgsound="false"
          bgsoundpaused="false"
          bgsoundloopended="false"
          volumeinitialized="false"
          started="true"
          keep="true"/>
  <events name="soundmanagementevents"
          onnewpano="if(plugin[soundinterface].started,playbackgroundsound(););"
          onxmlcomplete="soundinterfaceonxmlcomplete();"
          keep="true"/>
  <action name="soundinterfaceonxmlcomplete">
    ifnot(plugin[soundinterface].volumeinitialized,
      div(plugin[soundinterface].volume, tour_soundsvolume, 100);
      set(plugin[soundinterface].volumeinitialized,true);
    );
  </action>
  <action name="playsound3Dwhenpossible">
    set(really_play_sound, true);
    if (tour_current_played_sound,
      if (%1 == tour_current_played_sound,
        delete(tour_current_played_sound);
        set(tour_current_played_sound_state, 0);
        delete(tour_current_played_sound_paused);
        stopsound(%1);
        set(really_play_sound, false);
        if(%4,
          delete(tour_current_played_sound_pausesound);
          resumeTourSoundsActions(true,true,true,true,true);
        );
      );
    );
    if (really_play_sound,
      if (tour_current_played_sound,
        stopsound(get(tour_current_played_sound));

        ifnot(%4,
          if(tour_current_played_sound_pausesound,
            delete(tour_current_played_sound_pausesound);
            resumeTourSoundsActions(true,true,true,true,true);
          );
        );
      );
      if(%4,
        set(tour_current_played_sound_pausesound, true);
        pauseTourSoundsActions(true,false,true,true,true);
      );
      set(tour_current_played_sound, %1);
      if(tour_current_played_video,
        set(tour_current_played_sound_state, 2);
      ,
        set(tour_current_played_sound_state, 1);
      );
      set(tour_current_played_sound_paused, false);
      if (%3,
        if (device.flash,
          div(volume, tour_soundsvolume, 100);
          if(%9 != null,
            playsound3D(%1,%2,%5,%6,%7,get(volume),%8,stopsound3Dwhenpossible(%1,%4));
          ,
            playsound3D(%1,%2,%5,%6,%7,get(volume),%8);
          );
        ,
          if(%9 != null,
            playsound(%1,%2,%8,stopsound3Dwhenpossible(%1,%4));
          ,
            playsound(%1,%2,%8);
          );
        );
      ,
        if(%6 != null,
          playsound(%1,%2,%5,stopsound3Dwhenpossible(%1,%4));
        ,
          playsound(%1,%2,%5);
        );
      );

      ifnot(tour_soundson,
        set(tour_current_played_sound_paused, true);
        pausesound(%1);
      );
    );
  </action>
  <action name="stopsound3Dwhenpossible">
    if (%1 == tour_current_played_sound,
      delete(tour_current_played_sound);
      set(tour_current_played_sound_state, 0);
      delete(tour_current_played_sound_paused);

      ifnot(device.safari,
        stopsound(%1);
      );
      if(%2,
        delete(tour_current_played_sound_pausesound);
        resumeTourSoundsActions(true,true,true,true,true);
      );
    );
  </action>
  <action name="playbackgroundsound">
  if(playsound,
    if (xml.scene,
      if (scene[get(xml.scene)].backgroundsound,
        if (plugin[soundinterface].backgroundsound != scene[get(xml.scene)].backgroundsound,
          copy(plugin[soundinterface].backgroundsound, scene[get(xml.scene)].backgroundsound);
          copy(plugin[soundinterface].backgroundsoundloops, scene[get(xml.scene)].backgroundsoundloops);
          if (tour_soundson,
            set(plugin[soundinterface].bgsound, true);
            set(plugin[soundinterface].bgsoundpaused, false);
            set(plugin[soundinterface].bgsoundloopended, false);
            if(plugin[soundinterface].backgroundsoundloops GT 0,
              playsound(bgsoundname, get(plugin[soundinterface].backgroundsound), get(plugin[soundinterface].backgroundsoundloops), stopbackgroundsoundoncomplete());
            ,
              playsound(bgsoundname, get(plugin[soundinterface].backgroundsound), get(plugin[soundinterface].backgroundsoundloops));
            );
           ,
            set(plugin[soundinterface].bgsound, false);
          );
        ,
          if (tour_soundson,
            if((plugin[soundinterface].bgsoundpaused == true AND scene[get(xml.scene)].video == false) OR (scene[get(xml.scene)].video == true AND scene[get(xml.scene)].scenevideomute == true),
              resumesound(bgsoundname);
              set(plugin[soundinterface].bgsoundpaused, false);
            );
          ,
            set(plugin[soundinterface].bgsound, false);
          );
        );
      );
    );
  ,
    delayedcall(0.2, playbackgroundsound());
  );
  </action>
  <action name="stopbackgroundsoundoncomplete">
    if (plugin[soundinterface].backgroundsound,
    if (plugin[soundinterface].backgroundsoundloops GT 0,

      set(plugin[soundinterface].backgroundsoundloops, 0);
      set(plugin[soundinterface].bgsound, false);
      set(plugin[soundinterface].bgsoundpaused, false);
      set(plugin[soundinterface].bgsoundloopended, true);
    );
    );
  </action>
  <action name="resetbackgroundsoundifneeded">
    if (xml.scene,
      if (scene[get(xml.scene)].backgroundsound != scene[%1].backgroundsound,
        if(plugin[soundinterface].backgroundsound,
          stopsound(bgsoundname);
        );
        set(plugin[soundinterface].backgroundsound, "");
        set(plugin[soundinterface].backgroundsoundloops, 0);
        set(plugin[soundinterface].bgsound, false);
        set(plugin[soundinterface].bgsoundpaused, false);
        set(plugin[soundinterface].bgsoundloopended, false);
      );
    );
  </action>
  <action name="pausebackgroundsound">
    if(plugin[soundinterface].backgroundsound,
      if (plugin[soundinterface].bgsound,
        if(plugin[soundinterface].bgsoundpaused == false AND plugin[soundinterface].bgsoundloopended == false,
          pausesound(bgsoundname);
          set(plugin[soundinterface].bgsoundpaused, true);
        );
      );
    );
    
  </action>
  <action name="resumebackgroundsound">
    set(bgSoundOnResume, true);
    set(forceBgSoundOnResume, true);
    if(layer[displayedStandardVideo],
    if(layer[displayedStandardVideo].pausebgsound AND tour_current_played_video,
      set(bgSoundOnResume, false);
      set(forceBgSoundOnResume, false);
    ););
    if(layer[webvideodisplay_player],
    if(layer[webvideodisplay_player].pausebgsound AND tour_current_played_web_video,
      set(bgSoundOnResume, false);
      set(forceBgSoundOnResume, false);
    ););
    if(tour_current_played_sound_pausesound AND tour_current_played_sound,
      set(bgSoundOnResume, false);
    );
    ifnot(plugin[soundinterface].backgroundsound AND scene[get(xml.scene)].backgroundsound,
      set(bgSoundOnResume, false);
    );
    if(videospots_playing GT 0,
      set(bgSoundOnResume, false);
      set(forceBgSoundOnResume, false);
    );
    if(bgSoundOnResume,
      if (plugin[soundinterface].backgroundsound,
        if (tour_soundson,
          if (plugin[soundinterface].bgsound AND plugin[soundinterface].bgsoundloopended == false,
            if((plugin[soundinterface].bgsoundpaused == true AND scene[get(xml.scene)].video == false) OR (scene[get(xml.scene)].video == true AND scene[get(xml.scene)].scenevideomute == true),
              resumesound(bgsoundname);
              set(plugin[soundinterface].bgsoundpaused, false);
            );
          ,
            set(plugin[soundinterface].bgsound, true);
            set(plugin[soundinterface].bgsoundpaused, false);
            set(plugin[soundinterface].bgsoundloopended, false);
            if(plugin[soundinterface].backgroundsoundloops GT 0,
              playsound(bgsoundname, get(plugin[soundinterface].backgroundsound), get(plugin[soundinterface].backgroundsoundloops), stopbackgroundsoundoncomplete());
            ,
              playsound(bgsoundname, get(plugin[soundinterface].backgroundsound), get(plugin[soundinterface].backgroundsoundloops));
            );
          );
        );
      );
      
    ,
      if(forceBgSoundOnResume,
        playbackgroundsound();
        
      );
    );
  </action>
  <action name="preloadSounds">
    preloadsound("present_day.mp3");
  </action>

  <action name="play3DLocalSounds">
    if (xml.scene, if (scene[get(xml.scene)].haslocalsounds, playpanolocalsounds();););
  </action>
  <action name="stop3DLocalSounds">
    if (xml.scene, if (scene[get(xml.scene)].haslocalsounds, stoppanolocalsounds();););
  </action>
  <action name="resume3DLocalSounds">
    if (xml.scene, if (scene[get(xml.scene)].haslocalsounds, 
      set(kill3dSoundOnResume, true);
      if(layer[displayedStandardVideo],
      if(layer[displayedStandardVideo].pausebgsound,
      if(tour_current_played_video,
        set(kill3dSoundOnResume, false);
      );););
      if(layer[webvideodisplay_player],
      if(layer[webvideodisplay_player].pausebgsound,
      if(tour_current_played_web_video,
        set(kill3dSoundOnResume, false);
      );););
      if(tour_current_played_sound_pausesound,
      if(tour_current_played_sound,
        set(kill3dSoundOnResume, false);
      ););
      if(kill3dSoundOnResume,
        resumepanolocalsounds();
      );
    ););
  </action>
  <action name="pause3DLocalSounds">
    if (xml.scene, if (scene[get(xml.scene)].haslocalsounds, pausepanolocalsounds();););
  </action>
  <action name="set3DLocalSoundsVolume">
    if (xml.scene, if (scene[get(xml.scene)].haslocalsounds, setpanolocalsoundsvolume();););
  </action>
  <action name="playTourSounds">
    set(tour_soundson, true);events.dispatch(playtoursoundsevent);
    resumeTourSoundsActions(true,true,true,true,true);
  </action>
  <action name="stopTourSounds">
    set(tour_soundson, false);events.dispatch(stoptoursoundsevent);
    pauseTourSoundsActions(true,true,true,true,true);
  </action>
  <action name="setTourSoundsVolume">
    set(tour_soundsvolume, %1);events.dispatch(changetoursoundsevent);
    div(volume, tour_soundsvolume, 100);
    set(plugin[soundinterface].volume, get(volume));
    set3DLocalSoundsVolume();
  </action>
  <action name="playTourSoundsActions">
    if(%1,
      if(plugin[soundinterface],
        if(plugin[soundinterface].started,
        play3DLocalSounds();
        );
      );
    );
    if(%2,
      if(plugin[soundinterface],
        if(plugin[soundinterface].started,
          resumebackgroundsound();
        );
      );
    );
  </action>
  <action name="stopTourSoundsActions">
    if(%1,
      stop3DLocalSounds();
    );
    if(%2,
      stopSoundActionsSounds();
    );
    if(%3,
      stopVideoActionsSounds();
    );
    if(%4,
      pausebackgroundsound();
    );
  </action>
  <action name="resumeTourSoundsActions">
    if(%1,
      if(plugin[soundinterface],
        if(plugin[soundinterface].started,
        resume3DLocalSounds();
        );
      );
    );
    if(%2,
      resumeSoundActionsSounds();
    );
    if(%3,
      resumeVideoActionsSounds();
    );
    if(%4,
      if(%5,
        if(plugin[soundinterface],
          if(plugin[soundinterface].started,
            resumebackgroundsound();
          );
        );
      ,
        pausebackgroundsound();
      );
    );
  </action>
  <action name="pauseTourSoundsActions">
    if(%1,
      pause3DLocalSounds();
    );
    if(%2,
      pauseSoundActionsSounds();
    );
    if(%3,
      pauseVideoActionsSounds();
    );
    if(%4,
      if(%5,
        pausebackgroundsound();
      ,
        if(plugin[soundinterface],
          if(plugin[soundinterface].started,
            resumebackgroundsound();
          );
        );
      );
    );
  </action>
  <action name="stopSoundActionsSounds">
    if (tour_current_played_sound,
      delete(tour_current_played_sound_paused);
      stopsound(get(tour_current_played_sound));
      delete(tour_current_played_sound);
      set(tour_current_played_sound_state, 0);
    );
  </action>
  <action name="stopVideoActionsSounds">
    if(tour_current_played_video,
      if(layer[displayedStandardVideo],
        layer[displayedStandardVideo].stop();
        removelayer(displayedStandardVideo);
        if(layer[displayedStandardVideoOverlayButton], removelayer(displayedStandardVideoOverlayButton); );
        if(layer[displayedStandardVideoOverlay], removelayer(displayedStandardVideoOverlay); );
        delete(tour_current_played_video);
        set(tour_current_played_video_state, 0);
      );
    );
    if(tour_current_played_web_video,
      displayWebVideoObjectClose();
    );
  </action>
  <action name="resumeSoundActionsSounds">
    if (tour_current_played_sound,
      set(resumeSoundActionsVerification, true);
      if(tour_current_played_video,
        if(tour_current_played_sound_state LT tour_current_played_video_state,
          set(resumeSoundActionsVerification, false);
        );
      );
      if(resumeSoundActionsVerification,
        if (tour_soundson,
          if(tour_current_played_sound_paused,
            set(tour_current_played_sound_paused, false);
            resumesound(get(tour_current_played_sound));
          );
        );
      );
    );
  </action>
  <action name="resumeVideoActionsSounds">
    if(tour_current_played_video,
      set(resumeVideoActionsVerification, true);
      if(tour_current_played_sound,
        if(tour_current_played_video_state LT tour_current_played_sound_state,
          set(resumeVideoActionsVerification, false);
        );
      );
      if(resumeVideoActionsVerification,
        if (tour_soundson,
          div(volume, tour_soundsvolume, 100);
          if(device.flash,
            set(layer[displayedStandardVideo].volume, get(volume));
          ,
            ifnot(device.ios,
              js(kpanotour.Sounds.startVideosSounds(get(volume)));
            );
          );
        ,
          if(device.flash,
            set(layer[displayedStandardVideo].volume, 0);
          ,
            ifnot(device.ios,
              js(kpanotour.Sounds.stopVideosSounds());
            );
          );
        );
      );
    );
  </action>
  <action name="pauseSoundActionsSounds">
    if (tour_current_played_sound,
      ifnot(tour_current_played_sound_paused,
        set(tour_current_played_sound_paused, true);
        pausesound(get(tour_current_played_sound));
      );
    );
  </action>
  <action name="pauseVideoActionsSounds">
    if(tour_current_played_video,
      if(device.flash,
        set(layer[displayedStandardVideo].volume, 0);
      ,
        ifnot(device.ios,
          js(kpanotour.Sounds.stopVideosSounds());
        );
      );
    );
  </action>

</krpano>